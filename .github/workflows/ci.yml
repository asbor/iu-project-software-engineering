name: CI/CD Pipeline

on:
  push:
    branches:
      - master
      - main
      - tags
  pull_request:
    branches:
      - master
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:20.10.16-dind
        options: --privileged
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker-compose -f docker-compose.yml build
          docker-compose -f docker-compose.yml push
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')

  format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10

      - name: Install autopep8
        run: pip install autopep8

      - name: Run autopep8
        run: autopep8 --in-place --aggressive --aggressive -r .

      - name: Commit changes if any
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git diff --exit-code || git commit -am "Auto-formatting by autopep8"
        if: github.event_name == 'pull_request'

  unit-test:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:20.10.16-dind
        options: --privileged
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and run tests
        run: |
          docker-compose -f docker-compose.yml -f docker-compose.test.yml build --no-cache
          docker-compose -f docker-compose.yml -f docker-compose.test.yml up -d db
          docker-compose -f docker-compose.yml -f docker-compose.test.yml run backend /bin/sh -c "export PATH=\$PATH:/home/app/.local/bin && pytest --junitxml=/app/test-results.xml tests"
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: services/backend/test-results.xml
      - name: Tear down Docker Compose
        run: docker-compose -f docker-compose.yml -f docker-compose.test.yml down -v --remove-orphans

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Lint code
        run: docker-compose -f docker-compose.yml run backend /home/app/.local/bin/flake8 /app
      - name: Tear down Docker Compose
        run: docker-compose -f docker-compose.yml down

  release:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull, Tag and Push Docker Image
        run: |
          docker pull ghcr.io/${{ github.repository }}:main
          docker tag ghcr.io/${{ github.repository }}:main ghcr.io/${{ github.repository }}:latest
          docker push ghcr.io/${{ github.repository }}:latest
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    environment: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Deploy Docker Compose
        run: docker-compose -f docker-compose.yml up -d
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
